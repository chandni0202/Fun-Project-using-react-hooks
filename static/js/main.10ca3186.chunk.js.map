{"version":3,"sources":["reportWebVitals.js","Presentations/Card.js","Presentations/CardList.js","Presentations/SearchBox.js","Presentations/Scroll.js","Presentations/Error.js","Containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","src","alt","CardList","robots","map","user","index","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","Error","state","hasErrors","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6JAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCOCQ,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACA,sBAAKC,UAAU,gDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAA1B,aAAyCG,IAAI,UACrD,gCACI,6BAAKL,IACL,4BAAIC,WCMDK,EAVE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OAAO,8BAAMA,EAAOC,KAAI,SAACC,EAAMC,GAC3B,OAAO,cAAC,EAAD,CAEHR,GAAIO,EAAKP,GACTF,KAAMS,EAAKT,KACXC,MAAOQ,EAAKR,OAHPS,SCGFC,EARG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,8BACI,uBAAOV,UAAU,mCAAmCW,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,OCErGI,EAJA,SAACC,GACd,OAAO,qBAAKC,MAAO,CAACC,SAAU,SAAUC,OAAQ,oBAAqBC,OAAQ,UAAtE,SAAkFJ,EAAMK,YCsBlFC,E,kDAvBX,WAAYN,GAAO,IAAD,8BAEd,cAAMA,IACDO,MAAQ,CACZC,WAAY,GAJC,E,qDASlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,WAAY,M,oBAI/B,WAGI,OADAG,KAAKJ,MAAMC,UAAY,8DAAyCG,KAAKX,MAAMK,a,GAjB/DQ,aC4CLC,E,kDAvCb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAb1C,EAAKX,MAAQ,CACXlB,OAAQ,GACRK,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClByB,MAAM,8CACH5C,MAAK,SAAA6C,GAAQ,OAAGA,EAASC,UACzB9C,MAAK,SAAA+C,GAAU,EAAKV,SAAS,CAAEvB,OAAQiC,S,oBAO5C,WAAU,IAAD,EACyBX,KAAKJ,MAA7BlB,EADD,EACCA,OAAQK,EADT,EACSA,YACV6B,EAAiBlC,EAAOmC,QAAO,SAAAC,GACnC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASjC,EAAYgC,kBAEvD,OAAQrC,EAAOuC,OAGX,sBAAK3C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,wBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,UACE,cAAC,EAAD,CAAU1B,OAAQkC,WAPxB,6C,GAzBYV,aCClBgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM1B7D,M","file":"static/js/main.10ca3186.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n    return (\r\n    <div className=\"tc bg-light-green dib br3 ma2 grow bw2 shadow\">\r\n        <img src={`https://robohash.org/${id}?100*100\"`} alt=\"robot\"/>\r\n        <div>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n    return <div>{robots.map((user, index) => {\r\n        return <Card\r\n            key={index}\r\n            id={user.id}\r\n            name={user.name}\r\n            email={user.email} />\r\n    })}</div>;\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div>\r\n            <input className='pa3 ba b--green bg-lightest-blue' type=\"search\" placeholder=\"Search Robots\" onChange={searchChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\n\r\nconst Scroll = (props) => {\r\n  return <div style={{overflow: 'scroll', border: '3px #000000 solid', height: '1000px'}}>{props.children}</div>\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass Error extends Component {\r\n    constructor(props){\r\n\r\n        super(props)\r\n        this.state = {\r\n         hasErrors : false\r\n        }\r\n\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasErrors : true})\r\n        \r\n    }\r\n\r\n    render(){\r\n        const errors =\r\n        this.state.hasErrors ? <div>Oops! Something went wrong.</div> : this.props.children;\r\n        return errors\r\n\r\n\r\n}\r\n\r\n}\r\nexport default Error;","import React, { Component } from 'react';\r\nimport CardList from '../Presentations/CardList';\r\nimport SearchBox from '../Presentations/SearchBox';\r\nimport Scroll from '../Presentations/Scroll';\r\nimport Error from '../Presentations/Error';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response=> response.json())\r\n      .then(users => {this.setState({ robots: users})});\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value })\r\n  }\r\n\r\n  render() {\r\n    const { robots, searchfield } = this.state;\r\n    const filteredRobots = robots.filter(robot =>{\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n    })\r\n    return !robots.length ?\r\n      <h1>Loading</h1> :\r\n      (\r\n        <div className='tc'>\r\n          <h1 className='f1'>RoboFamily</h1>\r\n          <SearchBox searchChange={this.onSearchChange}/>\r\n          <Scroll>\r\n          <Error>\r\n            <CardList robots={filteredRobots} />\r\n          </Error>\r\n        </Scroll>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './Containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n   <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}